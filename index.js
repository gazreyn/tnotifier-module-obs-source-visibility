module.exports=(()=>{var e={211:(e,t,i)=>{var s=i(645)((function(e){return e[1]}));s.push([e.id,"@media only screen and (min-height: 158px){.source-name{-webkit-line-clamp:3 !important}}.module{display:flex;flex-direction:column;align-items:center;justify-content:center}.module.visible{background:linear-gradient(120deg, #0df26c 0%, #40bf75 100%)}.module.hidden{background:linear-gradient(120deg, #f20d0d 0%, #bf4040 100%)}.source-name{color:#fff;margin:10px 0;-webkit-box-orient:vertical;-webkit-line-clamp:2;display:-webkit-box;overflow:hidden;max-width:80vw;text-align:center}.source-name.inactive{color:#b6b6b6}#status-icon{color:#fff;font-size:45px;width:50px;height:50px}",""]),e.exports=s},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var i=e(t);return t[2]?"@media ".concat(t[2]," {").concat(i,"}"):i})).join("")},t.i=function(e,i,s){"string"==typeof e&&(e=[[null,e,""]]);var n={};if(s)for(var r=0;r<this.length;r++){var c=this[r][0];null!=c&&(n[c]=!0)}for(var a=0;a<e.length;a++){var o=[].concat(e[a]);s&&n[o[0]]||(i&&(o[2]?o[2]="".concat(i," and ").concat(o[2]):o[2]=i),t.push(o))}},t}},960:(e,t,i)=>{var s=i(211);s&&s.__esModule&&(s=s.default),e.exports="string"==typeof s?s:s.toString()},465:(e,t,i)=>{"use strict";i.d(t,{default:()=>r});var s=i(960),n=i.n(s);const r=class extends window.tnotifier.module{constructor(){super(),this.$container.appendChild(this.template()),this.css=n(),this.ws=null,this.selectedScene=null,this.selectedItem=null,this.uiIcon=this.$container.querySelector("#status-icon"),this.uiLabel=this.$container.querySelector("#label"),this.uiModule=this.$container}async mounted(){const{id:e}=this.identity;try{this.ws=await window.tnotifier.ws(e)}catch(e){throw new Error("Unable to connect to OBS Websocket")}this.ws.on("SceneItemVisibilityChanged",(e=>{this.handleVisibilityChange(e)})),await super.mounted()}async prepareProps(e){let t={},i={};const s=await this.getScenes();if(s.forEach((e=>{t[e.name]={text:e.name,icon:"widgets"}})),e.scene){s.find((t=>t.name===e.scene)).sources.forEach((e=>{i[e.name]={text:e.name,icon:"widgets"}}))}return Object.assign({scene:{type:"select",required:!0,default:null,label:"Scene",help:"Select the scene where your source is",options:t,watch:!0}},e.scene?{item:{type:"select",default:null,required:!0,label:"Item",help:"Select an item",options:i}}:{})}onPropChange(e,t,i){switch(e){case"scene":this.selectedScene=t;break;case"item":this.selectedItem=t,this.refresh()}}async getScenes(){const{scenes:e}=await this.ws.send("GetSceneList");return e}handleVisibilityChange(e){const{sceneName:t,itemName:i}=e;t===this.selectedScene&&i===this.selectedItem&&this.refresh()}async refresh(){if(!this.selectedScene||!this.selectedItem)return this.updateUI("No Source Selected.");const e=await this.getItemVisibility(this.selectedScene,this.selectedItem);this.updateUI(`${this.selectedScene} - ${this.selectedItem}`,e)}async getItemVisibility(e,t){const i=await this.ws.send("GetSceneItemProperties",{"scene-name":e,item:t}),{visible:s}=i;return s}updateUI(e,t=null){switch(t){case null:this.uiIcon.setAttribute("type","obs"),this.uiModule.className="module";break;case!0:this.uiIcon.setAttribute("type","visibility_on"),this.uiModule.className="module visible";break;case!1:this.uiIcon.setAttribute("type","visibility_off"),this.uiModule.className="module hidden";break;default:this.uiModule.className="module"}this.uiLabel.innerText=e}}}},t={};function i(s){if(t[s])return t[s].exports;var n=t[s]={id:s,exports:{}};return e[s](n,n.exports,i),n.exports}return i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var s in t)i.o(t,s)&&!i.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i(465)})().default;