module.exports=(()=>{var e={211:(e,t,s)=>{var n=s(645)((function(e){return e[1]}));n.push([e.id,"@media only screen and (min-height: 158px){.source-name{-webkit-line-clamp:3 !important}}.module{display:flex;flex-direction:column;align-items:center;justify-content:center}.module.visible{background:linear-gradient(120deg, #0df26c 0%, #40bf75 100%)}.module.hidden{background:linear-gradient(120deg, #f20d0d 0%, #bf4040 100%)}.source-name{color:#fff;margin:10px 0;-webkit-box-orient:vertical;-webkit-line-clamp:2;display:-webkit-box;overflow:hidden;max-width:80vw;text-align:center}.source-name.inactive{color:#b6b6b6}#status-icon{font-size:45px;width:50px;height:50px}",""]),e.exports=n},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var s=e(t);return t[2]?"@media ".concat(t[2]," {").concat(s,"}"):s})).join("")},t.i=function(e,s,n){"string"==typeof e&&(e=[[null,e,""]]);var i={};if(n)for(var r=0;r<this.length;r++){var a=this[r][0];null!=a&&(i[a]=!0)}for(var c=0;c<e.length;c++){var o=[].concat(e[c]);n&&i[o[0]]||(s&&(o[2]?o[2]="".concat(s," and ").concat(o[2]):o[2]=s),t.push(o))}},t}},960:(e,t,s)=>{var n=s(211);e.exports="string"==typeof n?n:n.toString()},465:(e,t,s)=>{"use strict";s.d(t,{default:()=>r});var n=s(960),i=s.n(n);const r=class extends window.casthub.module{constructor(){super(),this.$container.appendChild(this.template()),this.css=i(),this.sceneItemMap={},this.ws=null,this.$icon=this.$container.querySelector("#status-icon"),this.$label=this.$container.querySelector("#label"),this.$module=this.$container}async mounted(){const{id:e}=this.identity;try{this.ws=await window.casthub.ws(e)}catch(e){throw console.error(e),new Error("Unable to connect to OBS Websocket")}this.sceneItemMap=await this.generateSceneItemMap(),await this.refresh(),this.ws.on("SceneItemVisibilityChanged",(({sceneName:e,itemName:t})=>{e!==this.sceneItemMap[this.props.sceneItem].sceneName&&t!==this.sceneItemMap[this.props.sceneItem].sourceName||this.refresh()})),await super.mounted()}async prepareProps(){let e={};const t=Object.keys(this.sceneItemMap),s=t.length;for(let n=0;n<s;n++)e[t[n]]={text:`${this.sceneItemMap[t[n]].sceneName} - ${this.sceneItemMap[t[n]].sourceName} `,icon:"widgets"};return{sceneItem:{type:"select",required:!0,default:null,label:"Source",help:"Select a source to toggle",options:e}}}onPropChange(e,t,s){s||"sceneItem"===e&&this.refresh()}async generateSceneItemMap(){const e={};return(await this.getScenes()).forEach((t=>{const{sources:s}=t;s.forEach((s=>{const n=`${encodeURI(t.name)}|${encodeURI(s.name)}`;e[n]={sceneName:t.name,sourceName:s.name}}))})),e}async refresh(){if(!this.sceneItemMap.hasOwnProperty(this.props.sceneItem)||null===this.props.sceneItem)return this.updateSourceState("No Source Selected!");const e=await this.getSourceVisibility(this.sceneItemMap[this.props.sceneItem].sceneName,this.sceneItemMap[this.props.sceneItem].sourceName);this.updateSourceState(`${this.sceneItemMap[this.props.sceneItem].sceneName} - ${this.sceneItemMap[this.props.sceneItem].sourceName}`,e)}updateSourceState(e,t=null){switch(t){case null:this.$icon.setAttribute("type","obs"),this.$module.className="module";break;case!0:this.$icon.setAttribute("type","visibility_on"),this.$module.className="module visible";break;case!1:this.$icon.setAttribute("type","visibility_off"),this.$module.className="module hidden";break;default:this.$module.className="module"}this.$label.innerText=e}async getSourceVisibility(e,t){const s=await this.ws.send("GetSceneItemProperties",{"scene-name":e,item:t}),{visible:n}=s;return n}async getScenes(){const{scenes:e}=await this.ws.send("GetSceneList");return e}}}},t={};function s(n){if(t[n])return t[n].exports;var i=t[n]={id:n,exports:{}};return e[n](i,i.exports,s),i.exports}return s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s(465)})().default;